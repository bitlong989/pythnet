name: Updated Pythnet Node

on:
  push:
    branches:
      - pyth
  workflow_dispatch:
    inputs:
      node:
        required: true
        type: choice
        description: Which Pythnet node to upgrade
        options:
          - 1
          - 2
      tag:
        required: true
        type: string
jobs:
  update-node:
    name: Pythnet Node Updater
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout tag
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.tag }}
      - name: Assume AWS role
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::192824654885:role/github-pythnet-updater
          aws-region: eu-west-2
      - name: Zip directory
        run: zip -r -q pythnet.zip .
      - name: Create temp key for SSH
        run: ssh-keygen -t rsa -f temp_key
      - name: Send key to node
        run: aws ec2-instance-connect send-ssh-public-key --instance-id i-072c26a75a798ba1d --availability-zone eu-west-2a --instance-os-user ubuntu --ssh-public-key file://temp_key.pub
      - name: Upload build to node
        run: scp -o "StrictHostKeyChecking no" -i temp_key pythnet.zip ubuntu@13.40.28.67:/home/ubuntu
      - name: Move build
        run: ssh -o "IdentitiesOnly=yes" -i temp_key ubuntu@13.40.28.67 sudo cp /home/ubuntu/pythnet.zip /opt/solana
      - name: Unzip
        run: ssh -o "IdentitiesOnly=yes" -i temp_key ubuntu@13.40.28.67 sudo unzip /opt/solana/pythnet.zip
      - name: Compile new release build
        run: ssh -o "IdentitiesOnly=yes" -i temp_key ubuntu@13.40.28.67 sudo /opt/solana/pythnet/cargo build --release

